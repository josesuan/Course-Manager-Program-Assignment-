Sprint Retrospective  (1st Sprint) 

STARTS
-Learn how to share code on GitHub projects. 
-Read through the updated mark scheme.
-Update burndown chart to Gordanâ€™s example.
-Complete user stories (in progress) section.
-Update daily scrum/burndown chart.


STOP

-We need to stop improperly saving our code as we lost our first sprint code and we need start saving our progress using GitHub.  
-We need to divide task properly for each member, so we have less downtime, and everyone gets guidance from the main programme. 
-Not everyone in our group has kept daily scrums updated, so we need to urge everyone to log their progress.  


Continue
-Release Burndown chart is going well as we know how to update it 
-Making UML class diagram before coding.
-Put in the extra time outside class and to stay up to date.  

----------------------------------------------------------------------------------------------------------------------------

Sprint Retrospective (2nd Sprint)

STARTS
- Learned how to use Github by uploading and downloading the zip files to collaborate with the members.
- Dividing task for creating the code.
- To organise our dashboard , place the right user stories on the right place.
- Create unit test and testing our programme for every user story completed.
-

STOP
- Stop doing extra actvities while working during meetings example watching tv show/music.
- All of us need to stop leaving no comments. 
- Uploading unnessary files on github.

Continue
- Keep updating daily scrum and burndown charts for every meeting
- Extreme Programing , group debugging 
- To do lists
